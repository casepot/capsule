[project]
name = "capsule"
version = "0.1.0"
description = "Advanced Python REPL with subprocess isolation and session management"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "aiohttp>=3.9.0",
    "aiofiles>=23.2.1",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "dill>=0.3.8",
    "psutil>=5.9.0",
    "structlog>=24.1.0",
    "prometheus-client>=0.19.0",
    "msgpack>=1.0.7",
    "ipython>=9.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.2.0",
    "mypy>=1.8.0",
    "basedpyright>=1.13.0",
    "ruff>=0.1.0",
    "black>=24.0.0",
    "resonate-sdk>=0.0.0",
    "types-psutil",
    "types-aiofiles",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = true
disallow_any_generics = true
disallow_subclassing_any = true
no_implicit_optional = true
no_implicit_reexport = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
pretty = true
plugins = ["pydantic.mypy"]
mypy_path = ["typings"]

[tool.pydantic-mypy]
warn_untyped_fields = true

[[tool.mypy.overrides]]
module = ["msgpack", "dill"]
ignore_missing_imports = true

# Local stubs for resonate are provided under typings/

[tool.basedpyright]
venvPath = "."
venv = ".venv"
pythonVersion = "3.11"
typeCheckingMode = "strict"
extraPaths = ["typings"]
useLibraryCodeForTypes = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingTypeStubs = "warning"
reportUnknownMemberType = "warning"
reportUnknownArgumentType = "warning"
reportUnknownVariableType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownParameterType = "warning"
reportMissingParameterType = "warning"
reportUntypedFunctionDecorator = "warning"

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Fast unit tests",
    "integration: Component integration tests",
    "e2e: End-to-end tests",
    "slow: Tests that take >1s",
    "stress: Performance and stress tests",
    "regression: Regression tests for fixed bugs",
    "skip_ci: Skip in CI environments",
]

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[dependency-groups]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-timeout>=2.3.0",
    "pytest-xdist>=3.5.0",
    "resonate-sdk>=0.0.0",
    "types-psutil",
    "types-aiofiles",
    "mypy>=1.17.1",
]
